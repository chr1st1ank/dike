[tool]
[tool.poetry]
name = "dike"
version = "1.0.0"
homepage = "https://github.com/chr1st1ank/dike"
description = "Python asyncio tools for web service resilience."
authors = ["Christian Krudewig <chr1st1ank@krudewig-online.de>"]
readme = "README.md"
license = "Apache-2.0"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Operating System :: OS Independent',
    'Framework :: AsyncIO'
]
packages = [
    { include = "dike" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7.1,<4.0"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "phmdoctest",
    "pytest-cov",
    "yamllint"
]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = { version = "*" }
bump2version = "^1.0"
fastapi = {version = "^0.85"}
flake8 = { version = "*" }
httpx = "^0.23"
invoke = "^1.7"
isort = { version = "*" }
mkapi = { version = "*" }
mkdocs = { version = "^1.4" }
mkdocs-autorefs = { version = "*" }
mkdocs-include-markdown-plugin = { version = "*" }
numpy = "~1.21"
phmdoctest = "^1.2"
pip = { version = "*" }
pre-commit = { version = "^2.20" }
pytest = "^7.1"
pytest-cov = { version = "*" }
pytest-parametrized = "^1.4"
safety = "^2.3"
toml = { version = "*" }
tox = { version = "*" }
twine = { version = "*" }
uvicorn = "^0.19"
virtualenv = { version = "^20.16" }
yamllint = "*"
pylint = {version = "^2.15.5", python = "^3.9"}

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
pymdown-extensions = "^9.7"
mkdocs = "^1.4.1"
mkdocs-include-markdown-plugin = "^4.0.0"
mkapi = "^1.0.14"
mkdocs-autorefs = "^0.4.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.pylint.master]
reports = false
msg-template = "{path}:{line}: {msg_id} ({symbol}) {msg} ({obj})"
load-plugins = [
    "pylint.extensions.docparams", # Find parameters missing in docstrings
    "pylint.extensions.docstyle", # Detect wrong docstring formatting
]
disable = [
    "bad-continuation", # Creates many false positives conflicting with black
    "invalid-name", # Creates warnings for local single-letter variables
    "fixme", # Creates warnings for todo items
    "no-else-return", # Creates refactor result for indented else block; which however might be more readable
    "duplicate-code", # Unfortunately this gives alerts also for identical function signatures
    "line-too-long", # Checked already by flake8
]

[tool.pylint.design]
max-args = 10  # Maximum number of arguments for functions
max-attributes = 15  # Maximum number of attributes for a class
