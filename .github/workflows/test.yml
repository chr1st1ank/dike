name: Test workflow

permissions:
  checks: write
  pull-requests: write

on:
  push:

    branches: [ master, main, release ]
  pull_request:
    branches: [ master, main, release ]

  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        exclude:
          - os: windows-latest
            python-version: "3.10"
            # No numpy wheels yet
        include:
          - python-version: 3.9
            os: ubuntu-20.04
            publish-results: true
            tox-full-run: true
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
          poetry install

      - name: Test with tox
        if: ${{ !matrix.tox-full-run }}
        run:
          poetry run tox -e test

      - name: Lint and test with tox
        if: ${{ matrix.tox-full-run }}
        run:
          poetry run tox

      - name: list files
        if: ${{ always() }}
        run: ls -l .

      - name: Publish Test Results
        if: ${{ matrix.publish-results && always() }}
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          junit_files: pytest.xml

      - uses: codecov/codecov-action@v3
        if: ${{ matrix.publish-results && always() }}
        with:
          fail_ci_if_error: true
          files: coverage.xml

  publish_dev_build:
    # if test failed, we should not publish
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: list files
        run: ls -l .

      - name: Build wheels and source tarball
        run: |
          poetry version $(poetry version --short)-dev.$GITHUB_RUN_NUMBER
          poetry version --short
          poetry build

      - name: publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN}}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
