# Publish package on release branch if it's tagged with 'v*'

name: release & publish workflow

# Controls when the action will run.
on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-versions: [3.9]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

#      - name: generate change log
#        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          issues: true
#          issuesWoLabels: true
#          pullRequests: true
#          prWoLabels: true
#          unreleased: true
#          addSections: '{"documentation":{"prefix":"**Documentation:**","labels":["documentation"]}}'
#          output: CHANGELOG.md
#
#      - name: show changelog
#        run: >-
#          cat CHANGELOG.md || echo "No changelog"

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build documentation
        run: |
          poetry install -E doc
          poetry run mkdocs build

      - name: Publish documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Build wheels and source tarball
        run: >-
          poetry build

      - name: show temporary files
        run: >-
          ls -l

#      - name: create github release
#        id: create_release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          body_path: ./CHANGELOG.md
#          files: dist/*.whl
#          draft: false
#          prerelease: false

      - name: Publish to PyPi
        run: poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
