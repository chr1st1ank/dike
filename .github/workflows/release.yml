# Publish package on release branch if it's tagged with 'v*'

name: release & publish workflow

# Controls when the action will run.
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  github_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2

      - name: Get version from tag
        id: tag_name
        shell: bash
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.2.0
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: false
          prerelease: false

  release:
    name: Create Release
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-versions: [3.9]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.0.2

      - uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build documentation
        run: |
          poetry install -E doc
          poetry run mkdocs build

      - name: Publish documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Build wheels and source tarball
        run: >-
          poetry build

      - name: show temporary files
        run: >-
          ls -l

      - name: Publish to PyPi
        run: poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
